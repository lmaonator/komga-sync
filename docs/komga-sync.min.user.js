// ==UserScript==
// @name        komga-sync
// @version     1.0.0
// @author      lmaonator
// @description Sync manga chapter progress with tracking websites.
// @license     GPL-3.0-or-later
// @homepageURL https://lmaonator.github.io/komga-sync/
// @downloadURL https://lmaonator.github.io/komga-sync/komga-sync.user.js
// @supportURL  https://github.com/lmaonator/komga-sync/issues
// @namespace   https://github.com/lmaonator/komga-sync
// @match       http*://komga.*/*
// @match       http*://*/komga/*
// @match       https://lmaonator.github.io/komga-sync/auth-*.html*
// @grant       GM.xmlHttpRequest
// @grant       GM.getValue
// @grant       GM.setValue
// @grant       GM.deleteValue
// @grant       GM.openInTab
// ==/UserScript==
!function(){"use strict";const e={NUMBER_PATTERN:"([0-9]+)(.[0-9]+)?(.?[a-z]+)?",get basic(){return new RegExp(`(?<=ch\\.) *${this.NUMBER_PATTERN}`)},get number(){return new RegExp(this.NUMBER_PATTERN)},unwanted:/\b(?:v|ver|vol|version|volume|season|s)[^a-z]?[0-9]+/g,unwantedWhiteSpace:/\s(?=extra|special|omake)/g,unwantedYear:/[([][^)\]]*(?:19|20)\d\d(?:[-.]\d\d)?[-. )\]]/g,unwantedRsolution:/\(x\d{4}\)/g,parseChapterNumber:function(e,t){let n=t.toLowerCase();n=n.replaceAll(e.toLowerCase(),"").trim(),n=n.replaceAll("_"," "),n=n.replaceAll(this.unwantedYear,""),n=n.replaceAll(this.unwantedRsolution,""),n=n.replaceAll(",",".").replaceAll("-","."),n=n.replaceAll(this.unwantedWhiteSpace,""),n=n.replaceAll(this.unwanted,"");let a=n.match(this.basic);if(null!==a){const e=this.getChapterNumberFromMatch(a);if(!isNaN(e))return e}if(a=n.match(this.number),null!==a){const e=this.getChapterNumberFromMatch(a);if(!isNaN(e))return e}return-1},getChapterNumberFromMatch:function(e){let t=Number(e[1]),n=e[2]??null,a=e[3]??null;return t+this.checkForDecimal(n,a)},checkForDecimal:function(e,t){if(null!==e&&""!==e)return Number(e);if(null!==t&&""!==t){if(t.includes("extra"))return.99;if(t.includes("omake"))return.98;if(t.includes("special"))return.97;const e=t.replace(/^\.+/,"");if(1==e.length)return this.parseAlphaPostFix(e[0])}return 0},parseAlphaPostFix:function(e){const t=e.charCodeAt()-("a".charCodeAt()-1);return t>=10?0:t/10}};async function t(e){await GM.setValue("config",JSON.stringify(e))}function n(e,t){const n=e.series[t];return void 0===n||null===n.parseFileForChapterNumber?e.parseFileForChapterNumber:n.parseFileForChapterNumber}(async()=>{const a="[komga-sync] ",s="https://api.mangaupdates.com/v1",i="https://myanimelist.net/v1/oauth2",r="https://api.myanimelist.net/v2",o="https://anilist.co/api/v2/oauth",l="https://graphql.anilist.co",c="ZjE4NDIxNGY4MTg4Y2RmNzEwZmM4N2MwMzMzYzhlMGM",d="MTYzNDc";if("komga-sync MAL auth"===document.title)return async function(){const e=new URL(window.location.href),t=await GM.getValue("mal_state");if(e.searchParams.get("state")!==t)return void document.body.appendChild(document.createTextNode("Error: Authorization state does not match"));const n=await GM.getValue("mal_challenge"),a=e.searchParams.get("code");await w(a,n).catch((()=>!1))?document.body.appendChild(document.createTextNode("Successfully authenticated with MyAnimeList ✅. You can now close this window.")):document.body.appendChild(document.createTextNode("Failed to authenticate with MyAnimeList ⚠️. Error details were logged to console."));GM.deleteValue("mal_state"),GM.deleteValue("mal_challenge")}();if("komga-sync AniList auth"===document.title)return async function(){const e=new URL(window.location.href),t=new URLSearchParams(e.hash.slice(1)),n=t.get("access_token");null!==n?(await GM.setValue("anilist_access_token",n),await GM.setValue("anilist_expires_at",1e3*parseInt(t.get("expires_in"),10)+Date.now()),document.body.appendChild(document.createTextNode("Successfully authenticated with AniList ✅. You can now close this window."))):document.body.appendChild(document.createTextNode("Failed to authenticate with AniList ⚠️. Please try again."))}();if(!document.title.startsWith("Komga"))return;const u=await async function(){const e={parseFileForChapterNumber:!1,series:{}};return Object.assign(e,JSON.parse(await GM.getValue("config","{}"))),e}(),p={id:"",title:"",number:"0",pagesCount:0,seriesId:"",seriesTitle:"",completed:!1,links:[]};let m=!1,h=!1;setInterval((async()=>{const g=new URL(window.location.href);let f=g.pathname.match(/series\/([^/]+)/);if(f){const e=f[1];if(!m){const n=document.querySelector("main header > div.v-toolbar__content div.spacer");if(null===n)return;const p=S("button",{className:"v-btn v-btn--icon v-btn--round theme--dark v-size--default",style:"width: 120px;",textContent:"Komga Sync"});p.addEventListener("click",(()=>{!async function(e){const n=document.createElement("div");n.classList.add("modal");const p=document.createElement("div");p.classList.add("content"),n.appendChild(p);const m=document.createElement("div");m.classList.add("header"),p.appendChild(m);const h=document.createElement("div");h.classList.add("header-title"),h.textContent="Komga-Sync",m.appendChild(h);const g=document.createElement("div");m.appendChild(g);const f=document.createElement("button");function b(){n.remove(),k.removeEventListener("click",y),window.removeEventListener("keydown",w)}function y(e){e.target==n&&b()}function w(e){"Escape"===e.code&&b()}f.textContent="❌",g.appendChild(f),f.addEventListener("click",b),k.addEventListener("click",y),window.addEventListener("keydown",w);const x=document.createElement("div");x.classList.add("global-conf"),p.appendChild(x);const v=document.createElement("div");x.appendChild(v);const C=function(e){const n=document.createElement("div");function a(n){switch(n.target.value){case"komga":e.parseFileForChapterNumber=!1;break;case"file":e.parseFileForChapterNumber=!0}t(e)}return n.insertAdjacentHTML("afterbegin",`\n<div class="global-conf-title">Global Configuration</div>\n<div>\n    <span>Chapter Number Source:</span>\n    <input type="radio" name="config-parse-file" id="config-parse-file-komga"\n        value="komga" ${!1===e.parseFileForChapterNumber?"checked":""}>\n    <label for="config-parse-file-komga">Komga</label>\n    <input type="radio" name="config-parse-file" id="config-parse-file-file"\n        value="file" ${!0===e.parseFileForChapterNumber?"checked":""}>\n    <label for="config-parse-file-file">Parse Filename</label>\n</div>`),n.querySelector("#config-parse-file-komga").addEventListener("change",a),n.querySelector("#config-parse-file-file").addEventListener("change",a),n}(u);x.appendChild(C);const _=document.createElement("button");_.textContent="MangaUpdates Login",_.className="login-button",v.appendChild(_),_.addEventListener("click",(async()=>{const e=prompt("MangaUpdates username:"),t=prompt("MangaUpdates password:");GM.xmlHttpRequest({url:s+"/account/login",method:"PUT",headers:{"Content-Type":"application/json"},data:JSON.stringify({username:e,password:t}),onload:async e=>{const t=JSON.parse(e.responseText);"success"===t.status&&(await GM.setValue("mu_session_token",t.context.session_token),await GM.setValue("mu_uid",t.context.uid),console.log(a+"MangaUpdates login successful"))}})})),""!==await GM.getValue("mu_session_token","")&&v.appendChild(document.createTextNode(" Logged in ✅"));v.appendChild(document.createElement("br"));const M=document.createElement("button");M.textContent="MyAnimeList Login",M.className="login-button",v.appendChild(M),M.addEventListener("click",(async()=>{const e=E(16),t=E(64);await GM.setValue("mal_state",e),await GM.setValue("mal_challenge",t);const n=new URLSearchParams({response_type:"code",client_id:atob(c),state:e,code_challenge:t,code_challenge_method:"plain"});GM.openInTab(i+"/authorize?"+n.toString())})),""!==await GM.getValue("mal_access_token","")&&v.appendChild(document.createTextNode(" Logged in ✅"));v.appendChild(document.createElement("br"));const L=document.createElement("button");L.textContent="AniList Login",L.className="login-button",v.appendChild(L),L.addEventListener("click",(()=>{const e=new URLSearchParams({client_id:atob(d),response_type:"token"});GM.openInTab(o+"/authorize?"+e.toString())})),""!==await GM.getValue("anilist_access_token","")&&v.appendChild(document.createTextNode(" Logged in ✅"));const A=await fetch("/api/v1/series/"+e),T=await A.json(),G=document.createElement("h2");G.textContent=T.metadata.title??T.name,p.appendChild(G);const F=function(e,n){e.series[n]||(e.series[n]={parseFileForChapterNumber:null});const a=e.series[n],s=document.createElement("div");function i(n){switch(n.target.value){case"global":a.parseFileForChapterNumber=null;break;case"komga":a.parseFileForChapterNumber=!1;break;case"file":a.parseFileForChapterNumber=!0}t(e)}return s.insertAdjacentHTML("afterbegin",`\n<div>\n    <span>Chapter Number Source:</span>\n    <input type="radio" name="config-parse-file-series" id="config-parse-file-series-global"\n        value="global" ${null===a.parseFileForChapterNumber?"checked":""}>\n    <label for="config-parse-file-series-global">Global Setting</label>\n    <input type="radio" name="config-parse-file-series" id="config-parse-file-series-komga"\n        value="komga" ${!1===a.parseFileForChapterNumber?"checked":""}>\n    <label for="config-parse-file-series-komga">Komga</label>\n    <input type="radio" name="config-parse-file-series" id="config-parse-file-series-file"\n        value="file" ${!0===a.parseFileForChapterNumber?"checked":""}>\n    <label for="config-parse-file-series-file">Parse Filename</label>\n</div>\n`),s.querySelector("#config-parse-file-series-global").addEventListener("change",i),s.querySelector("#config-parse-file-series-komga").addEventListener("change",i),s.querySelector("#config-parse-file-series-file").addEventListener("change",i),s}(u,e);F.classList.add("series-conf"),p.appendChild(F);const P={mu:"",mal:"",al:""};for(const e of T.metadata.links){switch(e.label){case"MangaUpdates":P.mu=e.url;break;case"MyAnimeList":P.mal=e.url;break;case"AniList":P.al=e.url}switch(new URL(e.url).hostname){case"mangaupdates.com":case"www.mangaupdates.com":P.mu||(P.mu=e.url);break;case"myanimelist.net":case"www.myanimelist.net":P.mal||(P.mal=e.url);break;case"anilist.co":case"www.anilist.co":P.al||(P.al=e.url)}}function R(e,t,n){const a=document.createElement("label");a.textContent=e,n.appendChild(a);const s=document.createElement("input");s.type="url",s.value=t,n.appendChild(s);const i=document.createElement("button");return i.textContent="Search "+e,n.appendChild(document.createElement("br")),[s,i]}const U=document.createElement("div");U.classList.add("links");const[I,V]=R("MangaUpdates",P.mu,U),[$,z]=R("MyAnimeList",P.mal,U),[O,j]=R("AniList",P.al,U);S("label",{textContent:"Search Term:"},U);const q=S("input",{value:T.metadata.title??T.name,type:"text",className:"search-input"},U),D=S("div",{className:"button-container"},U);D.appendChild(V),D.appendChild(z),D.appendChild(j),S("div",{className:"button-note",textContent:" Note: AniList has MyAnimeList IDs for most entries, if MAL is still missing it will also be added if available."},U),p.appendChild(U);const J=async(t,n)=>{const a=T.metadata.links.filter((e=>e.label!==t));a.push({label:t,url:n});204===(await fetch("/api/v1/series/"+e+"/metadata",{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({links:a})})).status&&(T.metadata.links=a)},H=(e,t,n)=>{const a=S("div",{className:"result-container"},p);N[e][t]=a,setTimeout((()=>delete N[e][t]),3e5);const s=document.createElement("h3");s.textContent=e+" Results",s.classList.add("result-header"),void 0!==n&&s.classList.add("result-header-with-note"),a.appendChild(s),void 0!==n&&S("div",{textContent:n,className:"result-note"},a);return S("div",{className:"result-list"},a)},Y=(e,t,n,a,s,i)=>{a=a.replace("_"," ").toLowerCase();const r=S("div",{className:"result-card"}),o=S("div",{className:"thumb"},r),l=S("img",{src:e},o),c=S("details",{},r);l.addEventListener("click",(()=>{c.toggleAttribute("open")})),S("summary",{innerHTML:`${n} <a href="${t}" target="_blank">🔗</a>\n                        <span>${a}</span> [${s}]`},c),c.insertAdjacentHTML("beforeend",i??"");return{card:r,button:S("button",{textContent:"Set URL"},r)}};V.addEventListener("click",(async()=>{const e=q.value.trim();k.querySelector(".result-container")?.remove(),N.MangaUpdates[e]?p.appendChild(N.MangaUpdates[e]):GM.xmlHttpRequest({url:s+"/series/search",method:"POST",headers:{"Content-Type":"application/json"},data:JSON.stringify({search:e}),onload:t=>{const n=JSON.parse(t.responseText),a=H("MangaUpdates",e);for(const{record:e}of n.results){const{card:t,button:n}=Y(e.image.url.thumb,e.url,e.title,e.type,e.year);n.addEventListener("click",(async()=>{I.value=e.url,await J("MangaUpdates",e.url)})),a.appendChild(t)}},onerror:e=>console.error(e)})})),z.addEventListener("click",(async()=>{const e=q.value.trim();if(k.querySelector(".result-container")?.remove(),N.MyAnimeList[e])return void p.appendChild(N.MyAnimeList[e]);const t=new URL(r+"/manga");t.searchParams.set("q",e),t.searchParams.set("fields","start_date, media_type, alternative_titles"),t.searchParams.set("nsfw","true"),GM.xmlHttpRequest({url:t.toString(),method:"GET",headers:{"X-MAL-CLIENT-ID":atob(c)},onload:t=>{const n=JSON.parse(t.responseText),a=H("MyAnimeList",e,"Click on the series thumbnail or title to show synonyms.");for(const{node:e}of n.data){const t="https://myanimelist.net/manga/"+e.id,n=e.alternative_titles,{card:s,button:i}=Y(e.main_picture.medium,t,e.title,e.media_type,e.start_date.slice(0,4),(""!==n.en?n.en+"<br>":"")+n.ja+(n.synonyms.length>0?"<br><b>Synonyms:</b><ul>"+n.synonyms.reduce(((e,t)=>e+`<li>${t}</li>`),"")+"</ul>":""));i.addEventListener("click",(async()=>{$.value=t,await J("MyAnimeList",t)})),a.appendChild(s)}},onerror:e=>console.error(e)})})),j.addEventListener("click",(async()=>{k.querySelector(".result-container")?.remove();const e=q.value.trim();if(N.AniList[e])return void p.appendChild(N.AniList[e]);const t={query:"\n                    query ($search: String) {\n                        Page {\n                            media(search: $search, type: MANGA) {\n                            id\n                            idMal\n                            title {\n                                romaji\n                                english\n                                native\n                            }\n                            format\n                            startDate {\n                                year\n                            }\n                            coverImage {\n                                medium\n                            }\n                            synonyms\n                            siteUrl\n                            }\n                        }\n                    }\n                ",variables:{search:e}};GM.xmlHttpRequest({url:l,method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},data:JSON.stringify(t),onload:t=>{const n=JSON.parse(t.responseText),a=H("AniList",e,"Click on the series thumbnail or title to show synonyms.");for(const e of n.data.Page.media){const{card:t,button:n}=Y(e.coverImage.medium,e.siteUrl,e.title.english??e.title.romaji??e.title.native,e.format,e.startDate.year,(e.title.romaji?e.title.romaji+"<br>":"")+e.title.native+(e.synonyms.length>0?"<br><b>Synonyms:</b><ul>"+e.synonyms.reduce(((e,t)=>e+`<li>${t}</li>`),"")+"</ul>":""));n.addEventListener("click",(async()=>{if(await J("AniList",e.siteUrl),O.value=e.siteUrl,null!==e.idMal&&""===$.value){const t="https://myanimelist.net/manga/"+e.idMal;await J("MyAnimeList",t),$.value=t}})),a.appendChild(t)}},onerror:e=>console.error(e)})})),k.appendChild(n)}(e),p.blur()})),n.parentNode.insertBefore(p,n.nextSibling),m=!0}}else m=!1;if(f=g.pathname.match(/book\/([^/]+)\/read/),f){if(p.id!==f[1]){p.id=f[1];let t=await fetch("/api/v1/books/"+p.id),s=await t.json();p.title=s.metadata.title,n(u,p.seriesId)?p.number=e.parseChapterNumber(s.seriesTitle,s.url):p.number=s.metadata.number,p.pagesCount=s.media.pagesCount,p.seriesId=s.seriesId,p.seriesTitle=s.seriesTitle,p.completed=!1,console.log(a+"Chapter opened: "+p.seriesTitle+" Ch. "+p.number+": "+p.title),t=await fetch("/api/v1/series/"+p.seriesId),s=await t.json(),p.links=s.metadata.links}if("false"!==g.searchParams.get("incognito"))return;if(!p.completed&&Number(g.searchParams.get("page"))==p.pagesCount){p.completed=!0,console.log(a+"Chapter complete, syncing..");const e=[["MangaUpdates",y],["MyAnimeList",v],["AniList",_]];for(const[t,n]of e){const e=p.links.find((e=>e.label===t));if(e)try{!0===await n(e.url,p.number)&&console.log(a+"Successfully synced with "+t)}catch(e){console.error(a+"Error syncing with "+t,e)}}}}else""!==p.id&&(console.log(a+"Chapter closed"),p.id="");if(f=g.pathname.match(/book\/([^/]+)\/?$/),null!==f){const t=document.querySelector("a.link-underline.text-h5").href.match(/series\/([^/]+)/)[1];h=!(!h&&n(u,t))||function(){const t=document.querySelector("div.container.pa-6.container--fluid");if(null===t)return!1;const n=Array.from(t.children).find((e=>"FILE"===e.firstChild.textContent)).lastChild.textContent.split(/\/|\\/).pop(),a=t.querySelector("a.link-underline.text-h5").textContent.trim()??"",s=e.parseChapterNumber(a,n),i=document.createElement("div");i.className="row align-center text-caption";const r=document.createElement("div");r.className="py-1 text-uppercase col-sm-3 col-md-2 col-xl-1 col-4";const o=document.createElement("div");return o.className="py-1 col-sm-9 col-md-10 col-xl-11 col-8",r.textContent="Parsed Chapter",o.textContent=s,i.appendChild(r),i.appendChild(o),t.appendChild(i),!0}()}else h=!1}),500);const g=await GM.getValue("mal_expires_at",null);null!==g&&g<=Date.now()&&(await GM.deleteValue("mal_access_token"),await GM.deleteValue("mal_expires_at"),alert("MyAnimeList session has expired, please login again."));const f=await GM.getValue("anilist_expires_at",null);async function b(e,t,n){const a=await GM.getValue("mu_session_token");return new Promise(((i,r)=>{GM.xmlHttpRequest({url:s+e,method:t,headers:{Authorization:"Bearer "+a,"Content-Type":"application/json"},data:void 0!==n?JSON.stringify(n):void 0,onload:e=>(401===e.status&&(GM.setValue("mu_session_token",""),alert("MangaUpdates session expired, please login again.")),i(e)),onerror:e=>(console.error(e),r(e))})}))}async function y(e,t){t=Math.floor(t);if(""===await GM.getValue("mu_session_token",""))return!1;const n={series:{id:A(e)},status:{chapter:t}};let a="/lists/series",s=await b("/lists/series/"+A(e),"GET");if(404===s.status)n.list_id=0;else{if(JSON.parse(s.responseText).status.chapter>=t)return!0;a+="/update"}return s=await b(a,"POST",[n]),200===s.status}async function w(e,t){const n={client_id:atob(c),client_secret:""};void 0!==e&&void 0!==t?Object.assign(n,{grant_type:"authorization_code",code:e,code_verifier:t}):Object.assign(n,{grant_type:"refresh_token",refresh_token:await GM.getValue("mal_refresh_token")});const a=new URLSearchParams(n).toString();return new Promise(((e,t)=>{GM.xmlHttpRequest({url:i+"/token",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},data:a,onload:t=>{if(200===t.status){const n=JSON.parse(t.responseText);return GM.setValue("mal_access_token",n.access_token),GM.setValue("mal_refresh_token",n.refresh_token),GM.setValue("mal_expires_at",Date.now()+2592e6),e(!0)}return alert("MyAnimeList session expired, please login again."),console.error(t),e(!1)},onerror:e=>(console.error(e),t(!1))})}))}async function x(e,t,n){const a=await GM.getValue("mal_access_token");let s=n;return void 0!==s&&(s=new URLSearchParams(s).toString()),new Promise(((i,o)=>{GM.xmlHttpRequest({url:r+e,method:t,headers:{Authorization:"Bearer "+a,"Content-Type":"application/x-www-form-urlencoded"},data:s,onload:async a=>401===a.status&&await w()?x(e,t,n):i(a),onerror:e=>(console.error(e),o(e))})}))}async function v(e,t){const n=A(e);t=Math.floor(t);let a=await x("/manga/"+n+"?fields=my_list_status,num_chapters,status","GET");const s=JSON.parse(a.responseText),i=s.my_list_status??{is_rereading:!1,num_chapters_read:0,status:"plan_to_read"};if(i.num_chapters_read>=t)return!0;const r={num_chapters_read:t},o=(new Date).toISOString().substring(0,10);return"plan_to_read"===i.status?(r.status="reading",void 0===i.start_date&&(r.start_date=o)):"reading"===i.status&&t>=s.num_chapters&&"finished"===s.status&&(r.status="completed",void 0===i.finish_date&&(r.finish_date=o)),a=await x("/manga/"+n+"/my_list_status","PATCH",r),200===a.status}async function C(e,t){const n=await GM.getValue("anilist_access_token");return new Promise(((a,s)=>{GM.xmlHttpRequest({url:l,method:"POST",headers:{Authorization:"Bearer "+n,"Content-Type":"application/json",Accept:"application/json"},data:JSON.stringify({query:e,variables:t}),onload:async e=>(400===e.status&&e.responseText.includes("Invalid token")&&(await GM.deleteValue("anilist_access_token"),await GM.deleteValue("anilist_expires_at"),alert("AniList session has expired, please login again.")),a(e)),onerror:e=>(console.error(e),s(e))})}))}async function _(e,t){const n=A(e);t=Math.floor(t);let a=await C("\n            query ($id: Int) {\n                Media(id: $id, type: MANGA) {\n                    id\n                    chapters\n                    mediaListEntry {\n                        id\n                        status\n                        progress\n                        repeat\n                        startedAt {\n                            year\n                            month\n                            day\n                        }\n                        completedAt {\n                            year\n                            month\n                            day\n                        }\n                    }\n                }\n            }\n            ",{id:n}),s=JSON.parse(a.responseText);if(s.errors?.length>0)return console.error(s.errors),!1;const i=s.data.Media,r=i.mediaListEntry;if(r.progress>=t)return!0;const o=new Date,l={year:o.getFullYear(),month:o.getMonth()+1,day:o.getDate()},c={progress:t};if(i.chapters==t?(c.status="COMPLETED",c.completedAt=l):c.status="CURRENT",void 0===r)c.mediaId=n,c.startedAt=l;else{if(!["CURRENT","DROPPED","PAUSED","PLANNING"].includes(r.status))return!0;c.id=r.id}return a=await C("\n            mutation (\n                $id: Int, $mediaId: Int,\n                $status: MediaListStatus, $progress: Int, $repeat: Int,\n                $startedAt: FuzzyDateInput, $completedAt: FuzzyDateInput\n            ) {\n                SaveMediaListEntry (\n                    id: $id, mediaId: $mediaId,\n                    status: $status, progress: $progress, repeat: $repeat,\n                    startedAt: $startedAt, completedAt: $completedAt\n                ) {\n                    id\n                    mediaId\n                    status\n                    progress\n                    repeat\n                    startedAt {\n                        year\n                        month\n                        day\n                    }\n                    completedAt {\n                        year\n                        month\n                        day\n                    }\n                }\n            }\n            ",c),s=JSON.parse(a.responseText),!(s.errors?.length>0)||(console.error(s.errors),!1)}null!==f&&(f<=Date.now()?(await GM.deleteValue("anilist_access_token"),await GM.deleteValue("anilist_expires_at"),alert("AniList session has expired, please login again.")):f-6048e5<=Date.now()&&alert("AniList session will expire soon, please login again."));const M=document.createElement("div");document.body.appendChild(M);const k=M.attachShadow({mode:"open"}),L=document.createElement("style");L.textContent=".modal {\n    z-index: 300;\n    position: fixed;\n    padding-top: 100px;\n    transform: translate(0, 0);\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: auto;\n    height: auto;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.8);\n    overscroll-behavior: contain;\n}\n\n.header {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 0.5em;\n}\n\n.header-title {\n    font-size: 1.8em;\n    font-weight: bold;\n}\n\n.global-conf {\n    display: flex;\n    gap: 3em;\n}\n\n.global-conf-title {\n    font-weight: bold;\n    margin: 2px;\n    margin-bottom: 0.5em;\n}\n\n.global-conf input {\n    margin: 2px;\n}\n\n.global-conf label {\n    margin: 2px;\n}\n\n.series-conf {\n    margin-bottom: 0.5em;\n}\n\n.content {\n    font-family: Roboto, sans-serif;\n    font-size: 16px;\n    color: #ffffff;\n    background-color: #121212;\n    margin: auto;\n    width: 80%;\n    padding: 1em;\n    border: 1px solid #696969;\n    border-radius: 10px;\n}\n\nh2 {\n    margin-top: 1em;\n    margin-bottom: 0.5em;\n}\n\n.links label {\n    display: inline-block;\n    width: 120px;\n}\n\nbutton {\n    background-color: #303030;\n    border: 2px solid #303030;\n    border-radius: 5px;\n    color: #ffffff;\n    padding: 6px 16px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 2px;\n    transition-duration: 0.2s;\n    cursor: pointer;\n}\n\nbutton:hover {\n    background-color: #ffffff;\n    color: #000000;\n}\n\n.login-button {\n    width: 200px;\n}\n\n.links input {\n    padding: 5px;\n    margin: 2px;\n    box-sizing: border-box;\n    border: 1px solid #303030;\n    border-radius: 5px;\n    color: #ffffff;\n    background-color: #303030;\n    font-size: 16px;\n    width: 100%;\n    max-width: 800px;\n}\n\n.links .search-input {\n    margin-top: 16px;\n}\n\n.button-container {\n    margin-top: 8px;\n}\n\n.button-note {\n    font-size: 14px;\n    margin: 5px 2px;\n}\n\na {\n    text-decoration: none;\n    color: #ffffff;\n}\n\n.result-note {\n    font-size: 14px;\n    margin-bottom: 1em;\n}\n\n.result-header {\n    margin-top: 1em;\n    margin-bottom: 1em;\n}\n\n.result-header-with-note {\n    margin-bottom: 0.25em;\n}\n\n.result-list {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5em;\n}\n\n.result-card {\n    border: 1px solid #000;\n    background-color: #232323;\n    flex-basis: 400px;\n    flex-grow: 1;\n}\n\n.result-card .thumb {\n    float: left;\n    margin-right: 4px;\n    width: 106px;\n}\n\n.result-card img {\n    display: block;\n    height: 150px;\n    width: 106px;\n    object-fit: contain;\n}\n\n.result-card details {\n    margin: 5px;\n}\n\n.result-card summary {\n    font-weight: bold;\n}\n\n.result-card summary span {\n    text-transform: capitalize;\n}\n\n.result-card button {\n    margin: 0.5em;\n    padding: 3px 8px;\n    border: 1px solid #404040;\n    font-size: 14px;\n}\n\n.result-card ul {\n    margin-top: 0.25em;\n    padding-left: 10px;\n    list-style: inside;\n    overflow: auto;\n}\n",k.appendChild(L);const N={MangaUpdates:{},MyAnimeList:{},AniList:{}};function A(e){let t=e.match(/^https:\/\/(?:www\.)?mangaupdates\.com\/series\/([^/]+)/i);if(t)return parseInt(t[1],36);if(t=e.match(/^https:\/\/(?:www\.)?myanimelist\.net\/manga\/([^/]+)/i),t)return parseInt(t[1],10);if(t=e.match(/^https:\/\/(?:www\.)?anilist\.co\/manga\/([^/]+)/i),t)return parseInt(t[1],10);throw new Error("Invalid URL")}function E(e){const t="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";let n="";for(let a=e;a>0;--a)n+=t[Math.floor(62*Math.random())];return n}function S(e,t,n){const a=document.createElement(e);if(void 0!==t)for(const[e,n]of Object.entries(t))a[e]=n;return void 0!==n&&n.appendChild(a),a}})()}();
